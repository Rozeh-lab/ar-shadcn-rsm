// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        String        @id @default(uuid())
  email     String        @unique
  name      String?
  role      UserRole      @default(ADMIN)
  createdAt DateTime      @default(now())

  providers UserProvider[]
  notifications Notification[]
}

enum UserRole {
  SUPERADMIN
  ADMIN
  AGENCY
  CLIENT
  WRITER
}

model UserProvider {
  id          Int      @id @default(autoincrement())
  userId      String
  user        User     @relation(fields: [userId], references: [id])
  provider    String
  providerId  String
  accessToken String?
  createdAt   DateTime @default(now())

  @@unique([provider, providerId])
}

model Notification {
  id        Int      @id @default(autoincrement())
  userId    String
  type      String
  content   String
  sent      Boolean  @default(false)
  sentAt    DateTime?
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id])
}

model Agency {
  id          Int        @id @default(autoincrement())
  name        String
  contact     String?
  createdAt   DateTime   @default(now())
  companies   Company[]
  leads       Lead[]
  advertisers Advertiser[]
}

model Advertiser {
  id        Int     @id @default(autoincrement())
  name      String
  agencyId  Int
  agency    Agency  @relation(fields: [agencyId], references: [id])
  companyId Int
  company   Company @relation(fields: [companyId], references: [id])
}

model Company {
  id         Int         @id @default(autoincrement())
  name       String
  type       CompanyType @default(DIRECT)
  agencyId   Int?
  agency     Agency?     @relation(fields: [agencyId], references: [id])
  createdAt  DateTime    @default(now())
  deals      Deal[]
  placeRanks PlaceRank[]
  leads      Lead[]
  advertisers Advertiser[] // ✅ 추가!
}

enum CompanyType {
  DIRECT
  AGENCY
}

model Lead {
  id           Int        @id @default(autoincrement())
  agencyId     Int
  agency       Agency     @relation(fields: [agencyId], references: [id])
  companyId    Int
  company      Company    @relation(fields: [companyId], references: [id])
  contactName  String
  contactPhone String
  status       LeadStatus @default(RECEIVED)
  createdAt    DateTime   @default(now())
}

enum LeadStatus {
  RECEIVED
  CONSULTING
  PROPOSAL
  DEAL
}

model Deal {
  id            Int            @id @default(autoincrement())
  companyId     Int
  company       Company        @relation(fields: [companyId], references: [id])
  status        String         @default("deal")
  contractFile  String?
  startDate     DateTime?
  endDate       DateTime?
  createdAt     DateTime       @default(now())
  productOrders ProductOrder[]
}

model ProductTemplate {
  id           Int            @id @default(autoincrement())
  name         String
  type         String
  defaultPrice Int
  platform     String
  description  String?
  orders       ProductOrder[]
}

model ProductOrder {
  id                   Int                 @id @default(autoincrement())
  dealId               Int
  deal                 Deal                @relation(fields: [dealId], references: [id])
  templateId           Int
  template             ProductTemplate     @relation(fields: [templateId], references: [id])
  quantity             Int
  unitPrice            Int
  costPrice            Int
  profit               Int
  distributionAgencyId Int?
  distributionAgency   DistributionAgency? @relation(fields: [distributionAgencyId], references: [id])
  inspections          BlogInspection[]
  createdAt            DateTime            @default(now())
}

model DistributionAgency {
  id            Int            @id @default(autoincrement())
  name          String
  contact       String?
  createdAt     DateTime       @default(now())
  productOrders ProductOrder[]
}

model BlogInspection {
  id             Int          @id @default(autoincrement())
  postUrl        String       @unique
  isIndexed      Boolean
  hasMap         Boolean
  mapAddress     String?
  matchedAddress Boolean
  productOrderId Int
  productOrder   ProductOrder @relation(fields: [productOrderId], references: [id])
  createdAt      DateTime     @default(now())
}

model PlaceRank {
  id        Int      @id @default(autoincrement())
  companyId Int
  company   Company  @relation(fields: [companyId], references: [id])
  keyword   String
  rank      Int
  checkedAt DateTime
}

model Content {
  id             Int            @id @default(autoincrement())
  productOrderId Int?
  type           ContentType
  title          String
  url            String         
  author         String?
}

enum ContentType {
  BLOG_POST
  INSTAGRAM_POST
  YOUTUBE_VIDEO
  RECEIPT_REVIEW
  OTHER
}
